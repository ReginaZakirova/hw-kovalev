<?php
    require_once("header.php");
?>

    <main class="main">
        <h3>Циклы</h3>

<?php
/* ******************************    Задание 19 - 2    ****************************** */
echo "<br> Задание 19 - 2 <br>";
/*  Числа кратные 3 и 5, т.е. кратные 15 (15, 30, 45, ...) выводим курсивом и жирным.
    Числа кратные трем (3, 6, 9, ...) выводим курсивом. */
for ($i = 1; $i <= 50; $i++) {
    if (($i % 3) == 0) {
        if (($i % 5) == 0) {
            echo "<b><i>" . $i . "</i></b> ";
        }
        else {
            echo "<i>" . $i . "</i> ";
        }
    }
    else {
        echo $i . " ";
    }
}
echo "<br>";
/**************************************************************************************/


/* ******************************    Задание 19 - 4    ****************************** */
echo "<br> Задание 19 - 4 <br>";
/*  Будем каждый элемент последовательности задавать парой переменных, где
    $i - знаменатель дроби, а $j - числитель.
    Как можно заметить на каждом шаге последовательности переменная $j увеличивается на 3,
    а переменная $i увеличивается на 1, что очень удобно, так как позволяет переменную $i
    использовать как счетчик элементов последовательности. */
$sum = $i = $j = 1;
do {
    $sum += (($j += 3) / ++$i);
} while ($sum < 10);
echo "Минимальное количество элементов последовательности: " . $i . "<br>";
/**************************************************************************************/


/* ******************************    Задание 20 - 1    ****************************** */
echo "<br> Задание 20 - 1 <br>";
/*  По умолчанию, исходное число K задается в нотации позиционной десятичной системы счисления,
    а значит для определения его четных цифр необходимо последовательно применять операцию взятия по
    модулю 10 к переменной $K с последующей проверкой цифры на четность. После каждого шага
    переменную $K следует переопределять путем деления на 10 с получением значения целой части
    посредством явного приведения результата деления к целочисленному типу int. */
$K = 1234567890;
$sum = 0;
echo "Число K = $K<br>";
while ($K != 0) {
    $digit = $K % 10;
    if (($digit % 2) == 0) {
        $sum += $digit;
    }
    $K = (int) ($K / 10);
}
echo "Сумма всех четных цифр = $sum <br>";
/**************************************************************************************/


/* ******************************    Задание 20 - 2    ****************************** */
echo "<br> Задание 20 - 2";
echo "<p style='width: 50%'>  Насколько я понял из условия задания, для его решения 
    потребуется использование динамического массива, так как исходный размер числа неизвестен.
    После заполнения такого массива необходимо будет реализовать какой-либо алгоритм
    сортировки массива. Так как данное задание опционально, я лучше пойду и потрачу
    свободное время на Git - там куда как больше геморроя! </p>";
/**************************************************************************************/


/* ******************************    Задание 21 - 1    ****************************** */
echo "<br> Задание 21 - 1 <br>";
for ($i = 5; $i <=13; $i++) {
    echo $i . "<br>";
}
/**************************************************************************************/


/* ******************************    Задание 21 - 2    ****************************** */
echo "<br> Задание 21 - 2 <br>";
$num = 1000; $i = 0;
while (($num /= 2) >= 50) {
    $i++;
}
echo "Количество итераций: " . ++$i . "<br>";
for ($num = 1000, $i = 0; (($num /= 2) >= 50); $i++) {
}
echo "Количество итераций: " . ++$i . "<br>";
/**************************************************************************************/


/* ******************************    Задание 21 - 3    ****************************** */
echo "<br> Задание 21 - 3 <br>";
/*  Можно заметить, что какое бы натуральное число из диапазона [0 .. 10] мы не задали
    в выводе всегда будет присутствовать 0, поэтому будет разумно сразу вывести его, тем
    самым облегчив задачу вывода всей последовательности, так как количество запятых меньше
    количества цифр на 1 */
$i = 3;
echo "0";
for ($n = 1, $i = 10 - $i; $n <= $i; $n++) {
    echo ", $n";
}
/**************************************************************************************/
?>

    </main>
    <?php
        include_once("footer.php");